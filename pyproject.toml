[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-client"
version = "0.1.0"
description = "Modern Python client for MCP servers with LLM integration"
readme = "README.md"
#license = {file = "LICENSE"}
authors = [
    {name = "MCP Client Team"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "aiohttp>=3.8.0",
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
]

[project.urls]
Homepage = "https://github.com/your-org/mcp-client"
Documentation = "https://mcp-client.readthedocs.io"
Repository = "https://github.com/your-org/mcp-client.git"
"Bug Tracker" = "https://github.com/your-org/mcp-client/issues"

[project.scripts]
mcp = "mcp_client.cli:main"
mcp-client = "mcp_client.cli:main"
mcp-agent = "mcp_client.cli:agent_main"
mcp-basic = "mcp_client.cli:basic_client_main"
mcp-enhanced = "mcp_client.enhanced_basic_client:main"

[tool.hatch.version]
path = "src/mcp_client/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_client"]

[tool.black]
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mcp_client"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
